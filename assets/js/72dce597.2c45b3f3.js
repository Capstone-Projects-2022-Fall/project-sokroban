"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[4033],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return k}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=s(a),k=r,d=c["".concat(p,".").concat(k)]||c[k]||m[k]||l;return a?n.createElement(d,o(o({ref:t},u),{},{components:a})):n.createElement(d,o({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},99801:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return m}});var n=a(83117),r=a(80102),l=(a(67294),a(3905)),o=["components"],i={sidebar_position:2},p="Tasks",s={unversionedId:"development-plan/tasks",id:"development-plan/tasks",title:"Tasks",description:"1. Level Generation",source:"@site/docs/development-plan/tasks.md",sourceDirName:"development-plan",slug:"/development-plan/tasks",permalink:"/project-sokroban/docs/development-plan/tasks",draft:!1,editUrl:"https://github.com/Capstone-Projects-2022-Fall/project-sokroban/edit/main/documentation/docs/development-plan/tasks.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Activities",permalink:"/project-sokroban/docs/development-plan/activities"},next:{title:"Schedule",permalink:"/project-sokroban/docs/development-plan/schedule"}},u={},m=[],c={toc:m};function k(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"tasks"},"Tasks"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Level Generation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Procedurly generate Map and opsticles"),(0,l.kt)("li",{parentName:"ul"},"Have number of boxes increment per set of levels (Increase Difficulty) (I.E. Level 1-4 3 boxes, 5-10 5 boxes)"),(0,l.kt)("li",{parentName:"ul"},"Allow player to select how many boxes they want (Challenge Mode)"),(0,l.kt)("li",{parentName:"ul"},"Make procedural generation work for multiplayer "))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create login"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Create Login Screen (~1 point)"),(0,l.kt)("li",{parentName:"ul"},"Create Sign up screen (~1 point)"),(0,l.kt)("li",{parentName:"ul"},"Create Guest Option (~1 point)"),(0,l.kt)("li",{parentName:"ul"},"connect with API to allow users to create accounts and sign in with exsisting ones."),(0,l.kt)("li",{parentName:"ul"},"Add all buttons/scripts related (~2 points)"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Database"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Create local SQL server"),(0,l.kt)("li",{parentName:"ul"},"Create Sokroban Database"),(0,l.kt)("li",{parentName:"ul"},"Create Tables for PlayerInfo,LevelStats, and PlayerStats"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Menu Interfaces"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Main Menu",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Desgin Main Menu screen"),(0,l.kt)("li",{parentName:"ul"},"Create navigation buttons to take players to SinglePlayer/Multiplayer/Leaderboard"))),(0,l.kt)("li",{parentName:"ul"},"SinglePlayer",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Design Single Player Screen"),(0,l.kt)("li",{parentName:"ul"},"Create button/and logic for  starting challenge mode"))),(0,l.kt)("li",{parentName:"ul"},"Multiplayer Screen ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Design Multiplayer screen"),(0,l.kt)("li",{parentName:"ul"},"Create buttons/and logic for Joining lobby"),(0,l.kt)("li",{parentName:"ul"},"Create buttons/and logic for Hosting lobby"),(0,l.kt)("li",{parentName:"ul"},"Create Input field for room name "))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create levels for single-player (Story mode/Challenge Mode)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Incorporate procedural level generation (mentioned above)"),(0,l.kt)("li",{parentName:"ul"},"Create undo button"),(0,l.kt)("li",{parentName:"ul"},"Create Timer "),(0,l.kt)("li",{parentName:"ul"},"Create Point system algo (Decriments by number of moves)"),(0,l.kt)("li",{parentName:"ul"},"Setup grid movement system (~5 points)"),(0,l.kt)("li",{parentName:"ul"},"Create Sound/mute button"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Challenge Mode"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Everything from Single Player "),(0,l.kt)("li",{parentName:"ul"},"No undo button"),(0,l.kt)("li",{parentName:"ul"},"can choose number of boxes they want to deal with (Levels will scale accordingly)"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create/Implement Photon multiplater server"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Create a live Multiplater photon server "),(0,l.kt)("li",{parentName:"ul"},"Implement code to allow multiplayer functinoallity (~3 points)"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Multiplayer"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Allows 2-20 player to join a game for co-op "),(0,l.kt)("li",{parentName:"ul"},"2 player competitive mode "),(0,l.kt)("li",{parentName:"ul"},"For competitive has oppentents ghost visible on screen"),(0,l.kt)("li",{parentName:"ul"},"After connection make sure each player is controlling only one sprite (~ 2 points)"),(0,l.kt)("li",{parentName:"ul"},"Create win condition "),(0,l.kt)("li",{parentName:"ul"},"CO-OP: Make sure buddies sprite is interactible(Not ghost)"),(0,l.kt)("li",{parentName:"ul"},"2 player competitive mode "),(0,l.kt)("li",{parentName:"ul"},"For competitive has oppentents ghost visible on screen"),(0,l.kt)("li",{parentName:"ul"},"Make sure level and number of boxes scales for number of players in lobby"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"API"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Host API in the cloud via Azure"),(0,l.kt)("li",{parentName:"ul"},"Create Model"),(0,l.kt)("li",{parentName:"ul"},"Create Controller to handle login/Save/ and Leaderboard functionallity"),(0,l.kt)("li",{parentName:"ul"},"Create Swagger UI"),(0,l.kt)("li",{parentName:"ul"},"Connect API to DB"),(0,l.kt)("li",{parentName:"ul"},"Connect API to Sokroban"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Save Function"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Add script/function to send the level number to the database (~2 points)"),(0,l.kt)("li",{parentName:"ul"},"Add script/function to send the current player score/time to the database (~2 points)"),(0,l.kt)("li",{parentName:"ul"},"Add script to obtain level from DB when  loading save (~2 points)"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Leaderboards Tab"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Add script to pull the top scores/ names from the database (~2 points)"),(0,l.kt)("li",{parentName:"ul"},"Display the scores/names (~1 point)"),(0,l.kt)("li",{parentName:"ul"},"Have current users Name/Score/level/time displayed at the top of the screen above leaderboard (~3 points)")))))}k.isMDXComponent=!0}}]);